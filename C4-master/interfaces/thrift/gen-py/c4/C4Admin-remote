#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from c4 import C4Admin
from c4.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  void Compact()'
  print '  void TabulaRasa()'
  print '  void Save(string outputStream)'
  print '  void Load(string inputStream)'
  print '  void Shutdown()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = C4Admin.Client(protocol)
transport.open()

if cmd == 'Compact':
  if len(args) != 0:
    print 'Compact requires 0 args'
    sys.exit(1)
  pp.pprint(client.Compact())

elif cmd == 'TabulaRasa':
  if len(args) != 0:
    print 'TabulaRasa requires 0 args'
    sys.exit(1)
  pp.pprint(client.TabulaRasa())

elif cmd == 'Save':
  if len(args) != 1:
    print 'Save requires 1 args'
    sys.exit(1)
  pp.pprint(client.Save(args[0],))

elif cmd == 'Load':
  if len(args) != 1:
    print 'Load requires 1 args'
    sys.exit(1)
  pp.pprint(client.Load(args[0],))

elif cmd == 'Shutdown':
  if len(args) != 0:
    print 'Shutdown requires 0 args'
    sys.exit(1)
  pp.pprint(client.Shutdown())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
