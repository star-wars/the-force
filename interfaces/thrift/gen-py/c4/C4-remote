#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from c4 import C4
from c4.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  void InsertOrUpdate(TRowKey rowId, TColumnKey columnId, TValue value, TTTL ttl)'
  print '  TValue Get(TRowKey rowId, TColumnKey columnId)'
  print '  void TombstoneColumn(TRowKey rowId, TColumnKey columnId)'
  print '  void TombstoneRow(TRowKey rowId)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = C4.Client(protocol)
transport.open()

if cmd == 'InsertOrUpdate':
  if len(args) != 4:
    print 'InsertOrUpdate requires 4 args'
    sys.exit(1)
  pp.pprint(client.InsertOrUpdate(eval(args[0]),eval(args[1]),eval(args[2]),eval(args[3]),))

elif cmd == 'Get':
  if len(args) != 2:
    print 'Get requires 2 args'
    sys.exit(1)
  pp.pprint(client.Get(eval(args[0]),eval(args[1]),))

elif cmd == 'TombstoneColumn':
  if len(args) != 2:
    print 'TombstoneColumn requires 2 args'
    sys.exit(1)
  pp.pprint(client.TombstoneColumn(eval(args[0]),eval(args[1]),))

elif cmd == 'TombstoneRow':
  if len(args) != 1:
    print 'TombstoneRow requires 1 args'
    sys.exit(1)
  pp.pprint(client.TombstoneRow(eval(args[0]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
